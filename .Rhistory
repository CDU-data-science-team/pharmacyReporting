# Describe your package
fusen::fill_description(
pkg = here::here(),
fields = list(
Title = "Generate reports for pharmacy inventory project",
Description = "Using forecasting and stock control mechanisms",
`Authors@R` = c(
person("Chris", "Beeley", email = "chris.beeley@gmail.com", role = c("aut", "cre"))
)
)
)
# Define License with use_*_license()
usethis::use_mit_license("Crown copyright")
# Deal with classical files to ignore
usethis::git_vaccinate()
# Pipe
usethis::use_pipe()
# package-level documentation
usethis::use_package_doc()
# Set CI
# _GitHub
usethis::use_github_action_check_standard()
# Set CI
# _GitHub
usethis::use_github_action_check_standard()
# README
usethis::use_readme_rmd()
# Set CI
# _GitHub
usethis::use_github_action_check_standard()
usethis::use_github_action("pkgdown")
usethis::use_github_action("test-coverage")
# _GitLab
gitlabr::use_gitlab_ci(type = "check-coverage-pkgdown")
install.packages("gitlabr")
# _GitLab
gitlabr::use_gitlab_ci(type = "check-coverage-pkgdown")
# Add new flat template
fusen::add_flat_template("add")
# Keep eval=FALSE to avoid infinite loop in case you hit the knit button
# Execute in the console directly
fusen::inflate(flat_file = "dev/flat_full.Rmd", vignette_name = "Get started")
load("~/git/pharmacyReports/data/pharmacy.rda")
library(pharmacyReports)
source("R/")
files.sources = list.files("R/")
files.sources
sapply(files.sources, source)
files.sources = list.files("R/", full.names = TRUE)
sapply(files.sources, source)
here::here()
here::here("data/pharmacy.rda")
load(here::here("data/pharmacy.rda"))
load(here::here("data/pharmacy.rda"))
knitr::opts_chunk$set(echo = TRUE)
load(here::here("data/pharmacy.rda"))
files.sources = list.files("R/", full.names = TRUE)
sapply(files.sources, source)
test_data <- pharmacy |>
dplyr::filter(Site1 == "Site A", NSVCode == "Drug A")
daily_data <- make_tsibble(test_data, frequency = "Daily")
weekly_data <- make_tsibble(test_data, frequency = "Weekly")
daily_forecast <- forecast_series(
daily_data |> head(-42), 42, frequency = "Daily")
weekly_forecast <- forecast_series(
daily_data |> head(-6), 6, frequency = "Weekly")
plot_forecast(forecast_value = daily_forecast,
data = daily_data,
horizon = 42)
show_accuracy(forecast_value = daily_forecast,
data = daily_data,
horizon = 42)
test_data <- pharmacy |>
dplyr::filter(Site1 == "Site A", NSVCode == "Drug A")
daily_data <- make_tsibble(test_data, frequency = "Daily")
weekly_data <- make_tsibble(test_data, frequency = "Weekly")
daily_forecast <- forecast_series(
daily_data |> head(-42), 42, frequency = "Daily")
weekly_forecast <- forecast_series(
daily_data |> head(-6), 6, frequency = "Weekly")
plot_forecast(forecast_value = daily_forecast,
data = daily_data,
horizon = 42)
show_accuracy(forecast_value = daily_forecast,
data = daily_data,
horizon = 42)
test_data <- pharmacy |>
dplyr::filter(Site1 == "Site A", NSVCode == "Drug A")
daily_data <- make_tsibble(test_data, frequency = "Daily")
library(magrittr)
test_data <- pharmacy |>
dplyr::filter(Site1 == "Site A", NSVCode == "Drug A")
daily_data <- make_tsibble(test_data, frequency = "Daily")
weekly_data <- make_tsibble(test_data, frequency = "Weekly")
purrr:walk(files.sources, source)
purrr::walk(files.sources, source)
purrr::walk(files.sources, source)
purrr::walk(files.sources, ~ sys.source(., envir = knitr::knit_global()))
files.sources = list.files("R/", full.names = TRUE)
purrr::walk(files.sources, ~ sys.source(., envir = knitr::knit_global()))
purrr::walk(files.sources, ~ source(., local = knitr::knit_global()))
source(here::here("R/make_tsibble.R"), local = knitr::knit_global())
files.sources = list.files("R/", full.names = TRUE)
purrr::walk(files.sources, ~ source(., local = knitr::knit_global()))
sapply(files.sources, ~ source(., local = knitr::knit_global()))
files.sources = list.files(here::here("R/"), full.names = TRUE)
files.sources
# Add new flat template
fusen::add_flat_template("full")
load(here::here("data/pharmacy.rda"))
# Add new flat template
fusen::add_flat_template("add")
# Keep eval=FALSE to avoid infinite loop in case you hit the knit button
# Execute in the console directly
fusen::inflate(flat_file = "dev/flat_full.Rmd",
vignette_name = "Data and forecasting functions")
load(here::here("data/pharmacy.rda"))
load(here::here(), "data/pharmacy.rda")
load(here::here("data", "pharmacy.rda"))
# Run but keep eval=FALSE to avoid infinite loop
# Execute in the console directly
fusen::inflate(flat_file = "dev/flat_additional.Rmd", vignette_name = "Helper functions")
